with "target_options.gpr";

project Bare_Runtime is
  for Languages use ("Ada");
   for Target use "sh-elf";

  for Runtime ("Ada") use Project'Project_Dir;
  for Library_Support use "static_only";
  for Library_Auto_Init use "False";
  for Library_Name use "gnat";

  for Library_Kind use "static";

  -- FIXME: wat?
  for Library_Builder  use "/usr/libexec/gprbuild/gprlib";

  for Library_Dir use "adalib";
  for Object_Dir use "obj";

  for Source_Dirs use ("src");

  package Compiler is
     for Default_Switches ("Ada") use Target_Options.ALL_ADAFLAGS;

     --  Some runtime files need to be compiled with debug info, so that gdb
     --  is not blind.
     for Switches ("s-traceb.adb") use Target_Options.ALL_ADAFLAGS
       & ("-g")
       & ("-fno-optimize-sibling-calls", "-fno-inline-functions-called-once");
     for Switches ("a-except.adb") use Target_Options.ALL_ADAFLAGS
       & ("-g", "-O1", "-fno-inline", "-fno-toplevel-reorder");
     for Switches ("s-excdeb.adb") use Target_Options.ALL_ADAFLAGS
       & ("-g", "-O0");
     for Switches ("s-assert.adb") use Target_Options.ALL_ADAFLAGS
       & ("-g");
     for Switches ("a-tags.adb") use Target_Options.ALL_ADAFLAGS
       & ("-g");
     for Switches ("raise-gcc.c") use Target_Options.ALL_CFLAGS
       & ("-fexceptions");

     --  Don't inline System.Machine_Reset otherwise we can loose our common
     --  exit system.

     for Switches ("s-macres.adb") use Target_Options.ALL_ADAFLAGS
       & ("-fno-inline");

     --  Generate ada_target_properties to give target-specific information
     --  to formal verification tools.

     for Switches ("system.ads") use Target_Options.ALL_ADAFLAGS
       & ("-gnatet=" & Project'Project_Dir & "/ada_target_properties");
  end Compiler;

end Bare_Runtime;
